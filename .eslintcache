[{"/Users/nikolaostsoukas/projects/image_gallery/simple-image/simpleimage/src/App.js":"1","/Users/nikolaostsoukas/projects/image_gallery/simple-image/simpleimage/src/reportWebVitals.js":"2"},{"size":2168,"mtime":1609256466144,"results":"3","hashOfConfig":"4"},{"size":362,"mtime":1609253930123,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"cpz3g1",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nikolaostsoukas/projects/image_gallery/simple-image/simpleimage/src/App.js",["11","12"],"import { useState, useEffect } from 'react';\nimport './App.css';\nimport './index.css';\nimport freckles from  './freckles.jpeg';\n\nfunction App() {\n  // This is the state and we need it. Currently on line 7 the value of images is and empty array -- no images yet \n  const [images, setImages ] = useState([]);\n  /* We must use the useEffect hook. This is where we will make an api request and then set the images to the state\n     and map through them\n  */\n//  Adding loading just to use conditional \nconst [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getRedheads = async () => {\n      return await fetch(\"https://esits.org/tumblr-json.php?url=https://beautiful-redheads.tumblr.com\", {method: 'GET'})\n        .then(res => res.json())\n        .then(res => res.posts\n          .filter(post => post.type ==='photo')\n          .map(photo => {\n            return {\n              img: photo[\"photo-url-1280\"],\n              imgThumb: photo[\"photo-url-1280\"]\n            }\n          })\n        )\n        .catch(error => console.log('WTF!', error))\n    }\n    \n    getRedheads()\n      .then((redheads) => setImages(() => [...redheads]))\n      .then(() => setLoading(false));\n\n},[]);\n\n  {\n    if(!loading) {\n      return (\n        <div>\n          <div style={{backgroundImage: `url(${freckles})`}} className=\"h-96 bg-black bg-center w-screen bg-cover\"></div>\n          <div className=\"mason_container\">\n                 {/* The curly braces are needed to use javascript jsx */}\n                 {\n               images.map((image, index) => {\n                       return (\n                         <div>\n                             <img src={image.img} key={index} className=\"mason_image shadow-lg hover:shadow-2xl\" />\n                         </div>\n                         )\n                     })\n                 }   \n     \n             </div>\n        </div>\n       );\n    } else {\n      return(\n        <div>\n           <div style={{backgroundImage: `url(${freckles})`}} className=\"h-96 bg-black bg-center w-screen bg-cover\"></div>\n           <h1>The Images are loading right now ...</h1>\n        </div>\n      )\n    }\n  }\n}\n\nexport default App;\n","/Users/nikolaostsoukas/projects/image_gallery/simple-image/simpleimage/src/reportWebVitals.js",[],{"ruleId":"13","severity":1,"message":"14","line":37,"column":3,"nodeType":"15","messageId":"16","endLine":65,"endColumn":4},{"ruleId":"17","severity":1,"message":"18","line":48,"column":30,"nodeType":"19","endLine":48,"endColumn":116},"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]